string $selectedObjs[] = `ls -sl`;
string $filePrefix = "WHEEL_"; # if your texture files are created with a prefix from your painting program, add that here
string $strDir    = "G:/GoogleDrive/VFX/ESOURCES/REPOSITORY/VEHICLES/CARS/WHEEL/22INCH/TEXTURES/"+$filePrefix; #edit what's between the quotes only to specify the location of your textures on your hard drive
string $ext = ".exr"; #texture file extension
for ($obj in $selectedObjs){
	string $newMat    = `shadingNode -asShader "RedshiftMaterial"`;
	string $rnMat     = `rename $newMat ($obj + "_RS")`;
	string $newSG     = `sets -renderable true -noSurfaceShader true -empty -name ($rnMat + "SG")`;
	
	# variables for the shading nodes to be generated
			
	string $fileNodeColor                    = `shadingNode -asTexture file -name ($obj + "_RS_Color")`;
	string $fileNodeDiffuse                  = `shadingNode -asTexture file -name ($obj + "_RS_Diffuse")`;
	string $fileNodeMetalness                = `shadingNode -asTexture file -name ($obj + "_RS_Metalness")`;
	string $fileNodeRoughness                = `shadingNode -asTexture file -name ($obj + "_RS_Roughness")`;
	string $fileNodeEmissionColor            = `shadingNode -asTexture file -name ($obj + "_RS_EmissionColor")`;	
	string $fileNodeNormal                   = `shadingNode -asTexture file -name ($obj + "_RS_Normal")`;
	string $fileNodeDisplacementHeightField  = `shadingNode -asTexture file -name ($obj + "_RS_DisplacementHeightField")`;
	
	# connect the file nodes to each shader shannels
		
	connectAttr -f ( $obj + "_RS_Color.outColor" ) ( $obj + "_RS.diffuse_color" );
	connectAttr -f ( $obj + "_RS_Diffuse.outAlpha" ) ( $obj + "_RS.diffuse_weight" );
	connectAttr -f ( $obj + "_RS_Metalness.outAlpha" ) ( $obj + "_RS.refl_weight" );
	connectAttr -f ( $obj + "_RS_Roughness.outAlpha" ) ( $obj + "_RS.refl_roughness" );
	connectAttr -f ( $obj + "_RS_EmissionColor.outColor" ) ( $obj + "_RS.EmissionColor" );
	connectAttr -f ( $obj + "_RS_Normal.outColor" ) ( $obj + "_RS.bump_input" );
	connectAttr -f ( $obj + "_RS_DisplacementHeightField.outColor" ) ( $obj + "_RSSG.displacementShader" );
	
	# variables for the texture files nodes to be generated
	
	string $inputColor = $fileNodeColor + ".fileTextureName";
	string $pathColor = $strDir + $obj + "_WE_Color" + $ext ;
	string $inputDiffuse = $fileNodeDiffuse + ".fileTextureName";
	string $pathDiffuse = $strDir + $obj + "_WE_Diffuse" + $ext ;
	string $inputMetalness = $fileNodeMetalness + ".fileTextureName";
	string $pathMetalness = $strDir + $obj + "_WE_Metalness" + $ext ;
	string $inputRoughness = $fileNodeRoughness + ".fileTextureName";
	string $pathRoughness = $strDir + $obj + "_WE_Roughness" + $ext ;
	string $inputEmissionColor = $fileNodeEmissionColor + ".fileTextureName";
	string $pathEmissionColor = $strDir + $obj + "_WE_EmissionColor" + $ext ;	
	string $inputNormal = $fileNodeNormal + ".fileTextureName";
	string $pathNormal = $strDir + $obj + "_WE_Normal" + $ext ;
	string $inputDisplacementHeightField = $fileNodeDisplacementHeightField + ".fileTextureName";
	string $pathDisplacementHeightField = $strDir + $obj + "_WE_DisplacementHeightField" + $ext ;	
	
	# fill the texture channels of each shader with the appropriate PBR texture path
				
	setAttr -type "string" $inputColor $pathColor;
	setAttr -type "string" $inputDiffuse $pathDiffuse;
	setAttr -type "string" $inputMetalness $pathMetalness;
	setAttr -type "string" $inputRoughness $pathRoughness;
	setAttr -type "string" $inputEmissionColor $pathEmissionColor;	
	setAttr -type "string" $inputNormal $pathNormal;
	setAttr -type "string" $inputDisplacementHeightField $pathDisplacementHeightField;
	
	# connect each material to each shader, rinse and repeat
		
	connectAttr -f ($rnMat + ".outColor") ($newSG + ".surfaceShader");
	sets -e -forceElement $newSG $obj;
}
