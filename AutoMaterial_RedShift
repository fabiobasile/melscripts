string $selectedObjs[] = `ls -sl`; //get selected objects
for ($obj in $selectedObjs){ //iterate on selected objects
    string $texpath = "G:/GoogleDrive/VFX/RESOURCES/REPOSITORY/VEHICLES/CARS/ELECTRIC_TRANSMISSION/TEXTURES";
	string $newMat = `shadingNode -asShader "RedshiftMaterial"`; //create a material
	string $rnMat = `rename $newMat ($obj + "_RS")`; //rename new material based on object [optional]
	string $newSG = `sets -renderable true -noSurfaceShader true -empty -name ($rnMat + "SG")`; //create a shading group
	string $filename = ($texpath + $obj);

	string $fileNodeColor = `shadingNode -asTexture file -name $filename + "_Color"`;
	string $fileNodeDiffuse = `shadingNode -asTexture file -name $filename + "_Diffuse"`;
	string $fileNodeMetalness = `shadingNode -asTexture file -name $filename + "_Metalness"`;
	string $fileNodeRoughness = `shadingNode -asTexture file -name $filename + "_Roughness"`;

	connectAttr -f ( $fileNodeColor + ".outColor" ) ( $obj + ".diffuse_color" );
	connectAttr -f ( $fileNodeDiffuse + ".outAlpha" ) ( $obj + ".diffuse_weight" );
	connectAttr -f ( $fileNodeMetalness + ".outAlpha" ) ( $obj + ".refl_weight" );
	connectAttr -f ( $fileNodeRoughness + ".outAlpha" ) ( $obj + ".refl_roughness" );

	connectAttr -f ($rnMat + ".outColor") ($newSG + ".surfaceShader"); //connect shading group to lambert
	sets -e -forceElement $newSG $obj; //connect material to object
}
